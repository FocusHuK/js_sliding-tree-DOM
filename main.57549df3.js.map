{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","liAll","querySelectorAll","li","ulAll","ul","span","createElement","contains","prepend","append","nextSibling","addEventListener","events","item","target","closest","tagName","children","hidden"],"mappings":";AAAA,aAkBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhBA,IAgBA,EAhBMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASG,iBAAiB,MAEvBD,EAAAA,EAAAA,GAajB,IAbwB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbE,IAAa,EAAbA,EAAa,EAAA,MAChBC,EAAQL,SAASG,iBAAiB,MAEvBE,EAAAA,EAAAA,GAHK,IAGE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAbC,IAAAA,EAAa,EAAA,MAChBC,EAAOP,SAASQ,cAAc,QAEhCJ,EAAGK,SAASH,KACdF,EAAGM,QAAQH,GACXA,EAAKI,OAAOJ,EAAKK,eARC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAaxB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAAAb,EAAKc,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAAOD,EAAOE,OAAOC,QAAQ,MAEL,SAA1BH,EAAOE,OAAOE,SAIbH,EAAKI,SAAS,IAAOpB,EAAKU,SAASM,KAIxCA,EAAKI,SAAS,GAAGC,QAAUL,EAAKI,SAAS,GAAGC","file":"main.57549df3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tree = document.querySelector('.tree');\nconst liAll = document.querySelectorAll('li');\n\nfor (const li of liAll) {\n  const ulAll = document.querySelectorAll('ul');\n\n  for (const ul of ulAll) {\n    const span = document.createElement('span');\n\n    if (li.contains(ul)) {\n      li.prepend(span);\n      span.append(span.nextSibling);\n    };\n  }\n};\n\ntree.addEventListener('click', (events) => {\n  const item = events.target.closest('li');\n\n  if (events.target.tagName !== 'SPAN') {\n    return;\n  }\n\n  if (!item.children[1] || !tree.contains(item)) {\n    return;\n  }\n\n  item.children[1].hidden = !item.children[1].hidden;\n});\n"]}